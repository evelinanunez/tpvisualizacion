/**
 * Metodos adicionales de jQuery Validate propios de MIeL.
 */

// Agrego metodo para validar que dos campos sean diferentes
jQuery.validator.addMethod("notEqualTo", function(value, element, param) {
    return this.optional(element) || value != $(param).val();
}, "El valor ingresado es igual al anterior.");

// Agrego metodo para validar formato de fecha dd/mm/yyyy
jQuery.validator.addMethod("dateDMY", function(value, element) {
    return this.optional(element) || value.match(/^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[1,3-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$/);
}, "Por favor, ingrese una fecha vÃ¡lida.");

// Agrego metodo para validar el maximo tamano de un archivo en MB
jQuery.validator.addMethod('filesize', function (value, element, param) {
    if (window.FileReader && element.files.length > 0) {
        var filesizeMB = element.files[0].size / 1024 / 1024;
        return this.optional(element) || (filesizeMB <= param);
    }
    return true;
}, "El archivo debe ser menor a {0} MB.");

// Sobreescribo la ubicacion del mensaje de error
jQuery.validator.setDefaults({
    errorPlacement: function(error, element) {
        if (element.hasClass("input-addon-field")) {
            error.insertAfter(element.parent(".input-addon"));
        }
        else {
            error.insertAfter(element);
        }
    }
});
